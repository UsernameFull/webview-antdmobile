{"version":3,"sources":["table.js","New/numview.js","New/chart.js","chart_picker.js","timepicker.js","App.js","index.js"],"names":["Item","List","NumView","props","useState","data","setData","ticker","sensornum","useEffect","asyncFetch","nowTime","parseInt","Date","valueOf","fetch","method","mode","headers","body","JSON","stringify","starttime","endtime","interval","source","then","response","json","msg","map","e","time","value","Math","max","i","length","catch","error","console","log","renderHeader","className","Chart_demo","getTime","config","width","height","stepType","animation","title","xField","yField","DemoLine_picker","startTime","endTime","now","React","Component","App","FlexExample","count","tick","setTick","start","intervalId","setInterval","floor","clearInterval","useTicker","size","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8beac1af.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Tabs, WhiteSpace, Badge } from 'antd-mobile';\r\n\r\nimport DemoLine_t from \"./chart_time\";\r\n\r\n\r\nconst tabs = [\r\n  { title: <Badge >分</Badge> },\r\n  { title: <Badge >时</Badge> },\r\n  { title: <Badge >天</Badge> },\r\n];\r\n\r\nconst TabExample = (props) => {\r\n  const {ticker} = props\r\n  return(\r\n  <div>\r\n    <Tabs tabs={tabs}\r\n      initialPage={0}\r\n      onChange={(tab, index) => { console.log('onChange', index, tab); }}\r\n      onTabClick={(tab, index) => { console.log('onTabClick', index, tab); }}\r\n    >\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '200px', backgroundColor: '#fff' ,padding:'10%'}}>\r\n      <DemoLine_t ticker = {ticker} type=\"m\" source={[\"sensor0\",\"sensor1\"]}/>\r\n      </div>\r\n      {/* <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '200px', backgroundColor: '#fff' ,padding:'10%'}}>\r\n      <DemoLine_t ticker = {ticker} type=\"h\" source={[\"sensor0\",\"sensor1\"]}/>\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '200px', backgroundColor: '#fff' ,padding:'10%'}}>\r\n      <DemoLine_t ticker = {ticker} type=\"d\" source={[\"sensor0\",\"sensor1\"]}/>\r\n      </div> */}\r\n    </Tabs>\r\n    <WhiteSpace />\r\n\r\n  </div>\r\n)};\r\nexport default TabExample","import { List } from \"antd-mobile\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Item = List.Item;\r\n\r\nconst NumView = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const {ticker,sensornum} = props\r\n  useEffect(() => {if (ticker === 1) {asyncFetch();}}, [ticker]);\r\n\r\n  const asyncFetch = () => {\r\n    let nowTime =parseInt((new Date()).valueOf()/1000)-5;\r\n    fetch(\"http://47.110.147.58:55556/api/getdata\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        starttime:nowTime-40,\r\n        endtime: nowTime,\r\n        interval: 2,\r\n        source: sensornum,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        json.data.msg.map((e)=>{\r\n          e.time = 8+parseInt(e.time/60/60%24)+\":\"+parseInt(e.time/60%60)\r\n        })\r\n\r\n        json.data.msg[0].value = Math.max(...json.data.msg.map(e=>e.value))\r\n        for (let i=1;i<json.data.msg.length;i++){\r\n          if(json.data.msg[i].value ===0){\r\n            json.data.msg[i].value=json.data.msg[i-1].value\r\n          }\r\n        }\r\n        return setData(json.data.msg[json.data.msg.length-1].value);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"fetch data failed\", error);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div >\r\n      <List renderHeader={sensornum} className=\"my-list\">\r\n      <Item >{data}</Item>\r\n    </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line,Area  } from \"@ant-design/charts\";\r\nconst Chart_demo = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const {ticker ,sensornum} = props\r\n  useEffect(() => {if (ticker === 1) {asyncFetch()}}, [ticker]);\r\n\r\n  const asyncFetch = () => {\r\n    let nowTime = parseInt(new Date().getTime()/1000)-5;\r\n      fetch(\"http://47.110.147.58:55556/api/getdata\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          starttime:nowTime-60,\r\n          endtime: nowTime,\r\n          interval: 2,\r\n          source: sensornum,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          json.data.msg.map((e)=>{\r\n            e.time = parseInt(8+e.time/60/60%24)+\":\"+parseInt(e.time/60%60)+\":\"+parseInt(e.time%60)\r\n          })\r\n          json.data.msg[0].value = Math.max(...json.data.msg.map(e=>e.value))\r\n\r\n          for (let i=1;i<json.data.msg.length;i++){\r\n            if(json.data.msg[i].value ===0){\r\n              // json.data.msg[i].value=null\r\n              json.data.msg[i].value=json.data.msg[i-1].value\r\n            }\r\n          }\r\n          return setData(json.data.msg);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"fetch data failed\", error);\r\n        });\r\n  };\r\n  var config = {\r\n    data: data,\r\n    width: 300,\r\n    height: 200,\r\n    stepType: 'vh',\r\n    // connectNulls:true,\r\n    animation: false,\r\n    title:\"source\",\r\n    xField: \"time\",\r\n    yField: \"value\",\r\n  };\r\n  return <Line {...config} />;\r\n};\r\nexport default Chart_demo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nconst DemoLine_picker = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const { source, startTime, endTime } = props;\r\n  // useEffect(() => {\r\n  //   asyncFetch();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    asyncFetch();\r\n    console.log(startTime);\r\n    console.log(endTime);\r\n  }, [startTime]);\r\n\r\n  const asyncFetch = () => {\r\n    fetch(\"http://47.110.147.58:55556/api/getdata\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        starttime: parseInt(new Date().getTime() / 1000) - 3600,\r\n        endtime: parseInt(new Date().getTime() / 1000),\r\n        interval: 60,\r\n        source: \"sensor1\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        // console.log(json);\r\n        json.data.msg.map((e) => {\r\n          e.time =\r\n            8 +\r\n            parseInt((e.time / 60 / 60) % 24) +\r\n            \":\" +\r\n            parseInt((e.time / 60) % 60);\r\n          // console.log(e.time);\r\n        });\r\n        return setData(json.data.msg);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"fetch data failed\", error);\r\n      });\r\n  };\r\n  var config = {\r\n    data: data,\r\n    width: 300,\r\n    stepType: \"vh\",\r\n    title: \"source\",\r\n    xField: \"time\",\r\n    yField: \"value\",\r\n  };\r\n  return <Line {...config} />;\r\n  // return (<div>start:{startTime} end:{endTime}</div>)\r\n};\r\nexport default DemoLine_picker;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { List, Switch, Calendar } from 'antd-mobile';\r\nimport enUS from 'antd-mobile/lib/calendar/locale/en_US';\r\nimport zhCN from 'antd-mobile/lib/calendar/locale/zh_CN';\r\n\r\nimport DemoLine_picker from \"./chart_picker\"\r\n\r\nconst now = new Date();\r\n\r\nexport default class TimePicker extends React.Component {\r\n  originbodyScrollY = document.getElementsByTagName('body')[0].style.overflowY;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      en: false,\r\n      show: false,\r\n      showchart:false,\r\n      config: {},\r\n    };\r\n  }\r\n\r\n  renderBtn(zh, en, config = {}) {\r\n    config.locale = this.state.en ? enUS : zhCN;\r\n\r\n    return (\r\n      <List.Item arrow=\"horizontal\"\r\n        onClick={() => {\r\n          document.getElementsByTagName('body')[0].style.overflowY = 'hidden';\r\n          this.setState({\r\n            show: true,\r\n            config,\r\n          });\r\n        }}\r\n      >\r\n        {this.state.en ? en : zh}\r\n      </List.Item>\r\n    );\r\n  }\r\n\r\n  onSelectHasDisableDate = (dates) => {\r\n    console.warn('onSelectHasDisableDate', dates);\r\n  }\r\n\r\n  onConfirm = (startTime, endTime) => {\r\n    console.log(startTime,endTime.getTime());\r\n    document.getElementsByTagName('body')[0].style.overflowY = this.originbodyScrollY;\r\n    this.setState({\r\n      show: false,\r\n      showchart:true,\r\n      startTime,\r\n      endTime,\r\n    });\r\n  }\r\n\r\n  onCancel = () => {\r\n    document.getElementsByTagName('body')[0].style.overflowY = this.originbodyScrollY;\r\n    this.setState({\r\n      show: false,\r\n      startTime: undefined,\r\n      endTime: undefined,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <List className=\"calendar-list\" style={{ backgroundColor: 'white' }}>\r\n          {this.renderBtn('选择日期时间区间(快捷)', 'Select DateTime Range (Shortcut)', { pickTime: true, showShortcut: true,enterDirection: 'horizontal' })}\r\n        </List>\r\n        <Calendar\r\n          {...this.state.config}\r\n          visible={this.state.show}\r\n          onCancel={this.onCancel}\r\n          onConfirm={this.onConfirm}\r\n          onSelectHasDisableDate={this.onSelectHasDisableDate}\r\n          defaultDate={now}\r\n          minDate={new Date(+now - 5184000000)}\r\n          maxDate={new Date(+now + 31536000000)}\r\n        />\r\n        {this.state.showchart&&<DemoLine_picker startTime={this.state.startTime.getTime()} endTime = {this.state.endTime.getTime()}/>}\r\n      </div>\r\n    );\r\n  }\r\n}","import React,{ useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nimport { Flex, WhiteSpace } from \"antd-mobile\";\nimport \"antd-mobile/dist/antd-mobile.css\";\n//进度条组件\nimport ProgressLine from \"./progressline\"\n//table切换组件\nimport TabExample from \"./table\"\n//单数据展示组件\nimport NumView from \"./New/numview\"\nimport Chart_demo from \"./New/chart\"\n//日期选择组件\nimport TimePicker from \"./timepicker\"\n\nexport default function App() {\n  return <FlexExample />;\n}\n\nconst PlaceHolder = ({ className = \"\", ...restProps }) => (\n  <div className={`${className} placeholder`} {...restProps}>\n    Block\n  </div>\n);\n\nconst useTicker = () => {\n  const [tick, setTick] = useState(0);\n  useEffect(() => {\n    const start = Date.now();\n    const intervalId = setInterval(() => {\n      setTick(Math.floor((Date.now() - start) / 1000 %2));\n    }, 50);\n    return () => clearInterval(intervalId);\n  }, []);\n  return tick;\n};\n\nconst FlexExample = () => {\n  const count = useTicker();\n  return (\n  <div className=\"flex-container\">\n    {/* <NumView ticker = {count}/> */}\n    {/* <ProgressLine percent={count} /> */}\n    {/* <TabExample ticker = {count}/> */}\n    {/* <TimePicker/> */}\n    \n     <div className=\"sub-title\">Basic</div>\n    <Flex>\n      <Flex.Item>\n      <NumView ticker = {count} sensornum=\"sensor0\"/>\n      </Flex.Item>\n      <Flex.Item>\n      <NumView ticker = {count} sensornum=\"sensor1\"/>\n      </Flex.Item>\n    </Flex>\n    <WhiteSpace size=\"lg\" />\n    <Flex>\n      <Flex.Item>\n      <NumView ticker = {count} sensornum=\"sensor4\"/>\n      </Flex.Item>\n      <Flex.Item>\n      <NumView ticker = {count} sensornum=\"sensor5\"/>\n      </Flex.Item>\n    </Flex>\n    <WhiteSpace size=\"lg\" />\n    <div className=\"sub-title\">Basic</div>\n    <Flex>\n      <Flex.Item>\n      <Chart_demo ticker = {count} sensornum=\"sensor0\"/>\n      </Flex.Item>\n      <Flex.Item>\n      <Chart_demo ticker = {count} sensornum=\"sensor1\"/>\n      </Flex.Item>\n    </Flex>\n    <Flex>\n      <Flex.Item>\n      <Chart_demo ticker = {count} sensornum=\"sensor4\"/>\n      </Flex.Item>\n      <Flex.Item>\n      <Chart_demo ticker = {count} sensornum=\"sensor5\"/>\n      </Flex.Item>\n    </Flex>\n\n  </div>\n  )\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}